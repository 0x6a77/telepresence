language: python
sudo: required

# Run on Linux and OS X:
matrix:
  include:
    - os: linux
      dist: trusty
    - os: osx
      language: generic

# Cache gcloud SDK across runs; this requires master to have builds:
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

# Environment variables:
env:
  global:
    - PROJECT_NAME=datawireio
    - CLUSTER_NAME=telepresence-testing
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    # DOCKER_PASSWORD:
    - secure: "Aoq+9DUGzvMY3nnNdv/hWUMDjZ0mQvJOh2jNNwK64GXdgLbZj+QV+Db0PMfyUB8ZT6StfyiS6VjjiPuR9J9l7UHtnoZN0ZoPNoLVqt1SSr/81ToUKPofLlQbgWFBcXPUNQcEPxbc1RuoRfTmEcgHwAU7WAYY0qtSnYstY/wVCQdDxOSXQ9C2adV19kIjU/D5dH6fWNGKjalxHdBZ557bsRnJIuj/mZT4fHmIHovHy1G6joRFnc4TyGw/Q+1lItUVuAvfiRege/9IayCAFeXR9KUZTEZHxJkDlF6XnOQETHKObJexgKp0RRQCm7rxXPhDscRWths44IZq5wPaYL71h7wSV4W/HMwFFgX71H34RCW/XpDZbS8+l/QIHN5ts8c+Ot4DXpqfKKRLnl41RD+/yKC5td1WReMf5FBMwuvaD7bU7t835Vn0cBNkJC38R5zaltQj5O9hKtlQRm/nm9N9kJ1mEJcNtIj2Xu9LUING/7QNO8gGxw5p9DQfERlOiMaosLPxW+17ruIDhw3fG9YHdbs+yC98nCmkZOqbKKFhsfPGkH+4VX76NnLtn6YBCuCrvwLTBFC61B/1o+RbkJNqENtP1Y1rZ9Ie3OaFk3OEx2EXy0ocCqAqQS4ZvAj4I10M7xWNZ4BYcEvCrtaDedVQ88aHge2YfPh3zTqgJRZPs5I="


# Only build master branch and tags of form 0.1 or 1.0.2 (all PRs will be built):
branches:
  only:
    - master
    - /^\d+\.\d+(\.\d+)?$/

# Install various dependencies:
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install osxfuse; brew install python3 sshfs; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt install sshfs; fi
  # Record some debugging info:
  - python --version
  - python2 --version
  - python3 --version
  # Decrypt the service key:
  - openssl aes-256-cbc -K $encrypted_6168b41c1bb0_key -iv $encrypted_6168b41c1bb0_iv -in gcloud-service-key.json.enc -out gcloud-service-key.json -d
  # Make sure gcloud is installed:
  - ./ci/setup-gcloud.sh
  # Make sure torsocks is installed:
  - ./ci/build-torsocks.sh

install:
  # Push Docker images to Google Container Registry; on OS X we don't bother, we
  # just hope that the parallel Linux job finished building and pushing first...
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./ci/push-images.sh; fi
  
script:
  - make virtualenv
  - export TELEPRESENCE_VERSION=$(make version)
  - export TELEPRESENCE_REGISTRY=gcr.io/${PROJECT_NAME}
  - export PATH=$HOME/google-cloud-sdk/bin:$PATH
  # Magic incantation to make kubectl work, because apparently gcloud can't do that correctly (see https://github.com/kubernetes/kubernetes/issues/30617)
  - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-service-key.json
  - ./ci/test.sh

# If a commit is tagged, release the software:
deploy:
  provider: script
  skip_cleanup: true
  script: ci/release.sh
  on:
    tags: true
    branch: master
