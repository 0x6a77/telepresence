{{- with .Values }}
{{- if not .rbac.only }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "traffic-manager.name" $ }}
  namespace: {{ include "traffic-manager.namespace" $ }}
  labels:
    {{- include "telepresence.labels" $ | nindent 4 }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      {{- include "telepresence.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
    {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "telepresence.selectorLabels" $ | nindent 8 }}
    spec:
      {{- with .image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "traffic-manager.name" $ }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- with .image }}
          image: "{{ .registry }}/{{ .name }}:{{ .tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          env:
          - name: LOG_LEVEL
            value: {{ .logLevel }}
          - name: POD_CIDR_STRATEGY
            value: {{ .podCIDRStrategy }}
          {{- if .dnsServiceName }}
          - name: DNS_SERVICE_NAME
            value: {{ .dnsServiceName }}
          {{- end }}
          {{- if .dnsServiceNamespace }}
          - name: DNS_SERVICE_NAMESPACE
            value: {{ .dnsServiceNamespace }}
          {{- end }}
          {{- if .dnsServiceIP }}
          - name: DNS_SERVICE_IP
            value: {{ .dnsServiceIP }}
          {{- end }}
          {{- with .podCIDRs }}
          - name: POD_CIDRS
            value: "{{ join " " . }}"
          {{- end }}
          - name: SYSTEMA_HOST
            value: {{ .systemaHost }}
          - name: SYSTEMA_PORT
            value: {{ .systemaPort | quote }}
          {{- with .tracing }}
          {{- if .grpcPort }}
          - name: TRACING_GRPC_PORT
            value: {{ .grpcPort | quote }}
          {{- end }}
          {{- end }}
          {{- with .telepresenceAPI }}
          {{- if .port }}
          - name: AGENT_REST_API_PORT
            value: {{ .port | quote }}
          {{- end }}
          {{- end }}
          {{- if .grpc }}
          {{- if .grpc.maxReceiveSize }}
          - name: GRPC_MAX_RECEIVE_SIZE
            value: {{ .grpc.maxReceiveSize }}
          {{- end }}
          {{- end }}
        {{- /*
        Traffic agent injector configuration
        */}}
          {{- with .agentInjector }}
          - name: AGENT_INJECT_POLICY
            value: {{ .injectPolicy }}
          {{- end }}
        {{- /*
        Traffic agent configuration
        */}}
          {{- with .agent }}
          {{- if .logLevel }}
          - name: AGENT_LOGLEVEL
            value: {{ .logLevel }}
          {{- end }}
          {{- if .port }}
          - name: AGENT_PORT
            value: {{ .port | quote }}
          {{- end }}
          {{- /* replaced by agent.appProtocolStrategy. Retained for backward compatibility */}}
          {{- with $.Values.agentInjector.appProtocolStrategy }}
          - name: AGENT_APP_PROTO_STRATEGY
            value: {{ . }}
          {{- else }}
          {{- if .appProtocolStrategy }}
          - name: AGENT_APP_PROTO_STRATEGY
            value: {{ .appProtocolStrategy }}
          {{- end }}
          {{- end }}
          {{- /* replaced by agent (.resources and .initResoruces). Retained for backward compatibility */}}
          {{- with $.Values.agentInjector.agentImage }}
          {{- if .resources }}
          - name: AGENT_RESOURCES
            value: '{{ toJson .resources }}'
          {{- end }}
          {{- if .initResources }}
          - name: AGENT_INIT_RESOURCES
            value: '{{ toJson .initResources }}'
          {{- end }}
          {{- else }}
          {{- if .resources }}
          - name: AGENT_RESOURCES
            value: '{{ toJson .resources }}'
          {{- end }}
          {{- if .initResources }}
          - name: AGENT_INIT_RESOURCES
            value: '{{ toJson .initResources }}'
          {{- end }}
          {{- end }}
          {{- /* replaced by agent.image. Retained for backward compatibility */}}
          {{- with $.Values.agentInjector.agentImage }}
          {{- if .name }}
          - name: AGENT_IMAGE
            value: "{{ .name }}:{{ .tag | default $.Chart.AppVersion }}"
          {{- end }}
          {{- if .registry }}
          - name: AGENT_REGISTRY
            value: {{ .registry }}
          {{- end }}
          {{- else }}
          {{- with .image }}
          {{- if .name }}
          - name: AGENT_IMAGE
            value: "{{ .name }}:{{ .tag | default $.Chart.AppVersion }}"
          {{- end }}
          {{- if .registry }}
          - name: AGENT_REGISTRY
            value: {{ .registry }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .prometheus.port }}  # 0 is false
          - name: PROMETHEUS_PORT
            value: "{{ .prometheus.port }}"
          {{- end }}
          - name: MANAGER_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion : v1
                fieldPath: status.podIP
          {{- if .managerRbac.namespaced }}
          {{- with .managerRbac.namespaces }}
          - name: MANAGED_NAMESPACES
            value: "{{ join " " . }}"
          {{- end }}
          {{- end }}
        {{- /*
        Client configuration
        */}}
          {{- with .client }}
          - name: CLIENT_CONNECTION_TTL
            value: {{ .connectionTTL }}
          {{- /* replaced by client.routing. Retained for backward compatibility */}}
          {{- with $.Values.dnsConfig }}
          {{- if .alsoProxySubnets }}
          - name: CLIENT_ROUTING_ALSO_PROXY_SUBNETS
            value: "{{ join " " .alsoProxySubnets }}"
          {{- end }}
          {{- if .neverProxySubnets }}
          - name: CLIENT_ROUTING_NEVER_PROXY_SUBNETS
            value: "{{ join " " .neverProxySubnets }}"
          {{- end }}
          {{- else }}
          {{- with .routing }}
          {{- if .alsoProxySubnets }}
          - name: CLIENT_ROUTING_ALSO_PROXY_SUBNETS
            value: "{{ join " " .alsoProxySubnets }}"
          {{- end }}
          {{- if .neverProxySubnets }}
          - name: CLIENT_ROUTING_NEVER_PROXY_SUBNETS
            value: "{{ join " " .neverProxySubnets }}"
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .dns }}
          {{- with .excludeSuffixes }}
          - name: CLIENT_DNS_EXCLUDE_SUFFIXES
            value: "{{ join " " . }}"
          {{- end }}
          {{- with .includeSuffixes }}
          - name: CLIENT_DNS_INCLUDE_SUFFIXES
            value: "{{ join " " . }}"
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
          - name: api
            containerPort: 8081
          - name: https
            containerPort: 8443
          {{- if .prometheus.port }}  # 0 is false
          - name: prometheus
            containerPort: {{ .prometheus.port }}
          {{- end }}
          {{- with .tracing }}
          - name: grpc-trace
            containerPort: {{ .grpcPort }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .licenseKey.create }}
          - name: license
            mountPath: /home/telepresence
            readOnly: true
          {{- end }}
          {{- if .httpsProxy.rootCATLSSecret }}
          - name: proxy-ca
            mountPath: /var/run/secrets/proxy_tls
            readOnly: true
          {{- end }}
          - name: tls
            mountPath: /var/run/secrets/tls
            readOnly: true
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      volumes:
      {{- if .licenseKey.create }}
      - name: license
        secret:
          defaultMode: 420
          secretName: {{ .licenseKey.secret.name }}
      {{- end }}
      {{- if .httpsProxy.rootCATLSSecret }}
      - name: proxy-ca
        secret:
          defaultMode: 420
          secretName: {{ .httpsProxy.rootCATLSSecret }}
      {{- end }}
      - name: tls
        secret:
          defaultMode: 420
          secretName: {{ .agentInjector.secret.name }}
      serviceAccount: traffic-manager
      serviceAccountName: traffic-manager
{{- end }}
{{- end }}