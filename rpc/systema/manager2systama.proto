syntax = "proto3";

// The "systema" package describes the servier implemented by the
// SystemA cloud service, which is called to by in-cluster
// Telepsresence manager.
package telepresence.systema;

import "google/protobuf/empty.proto";

option go_package = "github.com/datawire/telepresence2/pkg/rpc/systema";

message Chunk {
  bytes content = 1;
}

// Calls from the manager to System A are authenticated via RFC 6750
// Bearer tokens.
service SystemACRUD {
  // CreateDomain requires that the manager authenticate using an
  // end-user's access token, to perform the action on behalf of that
  // user.
  rpc CreateDomain(CreateDomainRequest) returns (CreateDomainResponse);

  // RemoveDomain removes a domain that was previously created by the
  // same manager using CreateDomain.  The manager can take this
  // action itself, not on behalf of the user that created the domain,
  // so this requires that the manager authenticate itself, but does
  // not require an end-user's token.
  rpc RemoveDomain(RemoveDomainRequest) returns (google.protobuf.Empty);

}

// Calls from the manager to System A are authenticated via RFC 6750
// Bearer tokens.
service SystemAProxy {
  // ReverseConnection establishes a stream that is used for System A
  // to send gRPC requests back to the manager.  This requires that
  // the manager authenticate itself, but does not require an
  // end-user's token.
  rpc ReverseConnection(stream Chunk) returns (stream Chunk);
}

message CreateDomainRequest {
  string intercept_id = 1;
}

message CreateDomainResponse {
  string domain = 1;
}

message RemoveDomainRequest {
  string domain = 1;
}
