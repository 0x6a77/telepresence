syntax = "proto3";

package telepresence.systema;

import "google/protobuf/empty.proto";

option go_package = "github.com/telepresenceio/telepresence/rpc/v2/systema";

// Calls from the cli to Ambassador Cloud (System A) are unauthenticated
// This is because this rpc is (currently) only used to get messages from
// the cloud that we want to raise to our users.
service SystemACli {
  // GetMessages is used by the cli to get messages from the cloud.
  // Telepresence should cache these messages, since they won't change
  // too frequently.
  rpc GetMessages(google.protobuf.Empty) returns (MessageResponse);
}

message MessageResponse {
  // A map of <telepresence_cmd, message>, where message is what we want to
  // raise to the user when they execute the aforementioned command, when
  // the user isn't logged in.
  // Currently we only use this for intercepts, but designing this in such
  // a way it could be extended to other commands.
  map<string, string> unauthenticated_user_messages = 1;  
}
