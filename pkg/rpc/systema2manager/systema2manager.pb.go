// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: rpc/systema2manager/systema2manager.proto

// systema2manager deals with the calls that the System A cloud
// service makes to the in-cluster Telepresence manager.

package systema2manager

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InterceptDispositionType int32

const (
	InterceptDispositionType_UNSPECIFIED  InterceptDispositionType = 0
	InterceptDispositionType_ACTIVE       InterceptDispositionType = 1
	InterceptDispositionType_WAITING      InterceptDispositionType = 2
	InterceptDispositionType_NO_CLIENT    InterceptDispositionType = 3
	InterceptDispositionType_NO_AGENT     InterceptDispositionType = 4
	InterceptDispositionType_NO_MECHANISM InterceptDispositionType = 5
	InterceptDispositionType_NO_PORTS     InterceptDispositionType = 6
	InterceptDispositionType_AGENT_ERROR  InterceptDispositionType = 7
)

// Enum value maps for InterceptDispositionType.
var (
	InterceptDispositionType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ACTIVE",
		2: "WAITING",
		3: "NO_CLIENT",
		4: "NO_AGENT",
		5: "NO_MECHANISM",
		6: "NO_PORTS",
		7: "AGENT_ERROR",
	}
	InterceptDispositionType_value = map[string]int32{
		"UNSPECIFIED":  0,
		"ACTIVE":       1,
		"WAITING":      2,
		"NO_CLIENT":    3,
		"NO_AGENT":     4,
		"NO_MECHANISM": 5,
		"NO_PORTS":     6,
		"AGENT_ERROR":  7,
	}
)

func (x InterceptDispositionType) Enum() *InterceptDispositionType {
	p := new(InterceptDispositionType)
	*p = x
	return p
}

func (x InterceptDispositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterceptDispositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_systema2manager_systema2manager_proto_enumTypes[0].Descriptor()
}

func (InterceptDispositionType) Type() protoreflect.EnumType {
	return &file_rpc_systema2manager_systema2manager_proto_enumTypes[0]
}

func (x InterceptDispositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterceptDispositionType.Descriptor instead.
func (InterceptDispositionType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{0}
}

type ConnectionChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*ConnectionChunk_InterceptId
	//	*ConnectionChunk_Data
	//	*ConnectionChunk_Error
	Value isConnectionChunk_Value `protobuf_oneof:"value"`
}

func (x *ConnectionChunk) Reset() {
	*x = ConnectionChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionChunk) ProtoMessage() {}

func (x *ConnectionChunk) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionChunk.ProtoReflect.Descriptor instead.
func (*ConnectionChunk) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{0}
}

func (m *ConnectionChunk) GetValue() isConnectionChunk_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ConnectionChunk) GetInterceptId() string {
	if x, ok := x.GetValue().(*ConnectionChunk_InterceptId); ok {
		return x.InterceptId
	}
	return ""
}

func (x *ConnectionChunk) GetData() []byte {
	if x, ok := x.GetValue().(*ConnectionChunk_Data); ok {
		return x.Data
	}
	return nil
}

func (x *ConnectionChunk) GetError() string {
	if x, ok := x.GetValue().(*ConnectionChunk_Error); ok {
		return x.Error
	}
	return ""
}

type isConnectionChunk_Value interface {
	isConnectionChunk_Value()
}

type ConnectionChunk_InterceptId struct {
	InterceptId string `protobuf:"bytes,1,opt,name=intercept_id,json=interceptId,proto3,oneof"`
}

type ConnectionChunk_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type ConnectionChunk_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"` // TODO: Probably have a better error type
}

func (*ConnectionChunk_InterceptId) isConnectionChunk_Value() {}

func (*ConnectionChunk_Data) isConnectionChunk_Value() {}

func (*ConnectionChunk_Error) isConnectionChunk_Value() {}

type RemoveInterceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *SessionInfo `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Name    string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveInterceptRequest) Reset() {
	*x = RemoveInterceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInterceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInterceptRequest) ProtoMessage() {}

func (x *RemoveInterceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInterceptRequest.ProtoReflect.Descriptor instead.
func (*RemoveInterceptRequest) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveInterceptRequest) GetSession() *SessionInfo {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *RemoveInterceptRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{2}
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type InterceptInfoSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intercepts []*InterceptInfo `protobuf:"bytes,1,rep,name=intercepts,proto3" json:"intercepts,omitempty"`
}

func (x *InterceptInfoSnapshot) Reset() {
	*x = InterceptInfoSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterceptInfoSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterceptInfoSnapshot) ProtoMessage() {}

func (x *InterceptInfoSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterceptInfoSnapshot.ProtoReflect.Descriptor instead.
func (*InterceptInfoSnapshot) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{3}
}

func (x *InterceptInfoSnapshot) GetIntercepts() []*InterceptInfo {
	if x != nil {
		return x.Intercepts
	}
	return nil
}

type InterceptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec        *InterceptSpec           `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	ManagerPort int32                    `protobuf:"varint,2,opt,name=manager_port,json=managerPort,proto3" json:"manager_port,omitempty"`
	Disposition InterceptDispositionType `protobuf:"varint,3,opt,name=disposition,proto3,enum=telepresence.systema2manager.InterceptDispositionType" json:"disposition,omitempty"`
	Message     string                   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Id          string                   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InterceptInfo) Reset() {
	*x = InterceptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterceptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterceptInfo) ProtoMessage() {}

func (x *InterceptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterceptInfo.ProtoReflect.Descriptor instead.
func (*InterceptInfo) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{4}
}

func (x *InterceptInfo) GetSpec() *InterceptSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *InterceptInfo) GetManagerPort() int32 {
	if x != nil {
		return x.ManagerPort
	}
	return 0
}

func (x *InterceptInfo) GetDisposition() InterceptDispositionType {
	if x != nil {
		return x.Disposition
	}
	return InterceptDispositionType_UNSPECIFIED
}

func (x *InterceptInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InterceptInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InterceptSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Client    string `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Agent     string `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	Mechanism string `protobuf:"bytes,4,opt,name=mechanism,proto3" json:"mechanism,omitempty"`
	// additional mechanism-specific info
	// - header match patterns would go here
	// - perhaps a JSON blob for the Agent's mechanism implementation to parse
	// - how does the client decide to create this blob?
	// - perhaps just pass all the unrecognized CLI arguments? or all of them?
	// - maybe always pass client's install id to use for x-service-preview matches?
	Additional string `protobuf:"bytes,5,opt,name=additional,proto3" json:"additional,omitempty"`
	TargetHost string `protobuf:"bytes,6,opt,name=target_host,json=targetHost,proto3" json:"target_host,omitempty"`
	TargetPort int32  `protobuf:"varint,7,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
}

func (x *InterceptSpec) Reset() {
	*x = InterceptSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterceptSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterceptSpec) ProtoMessage() {}

func (x *InterceptSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_systema2manager_systema2manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterceptSpec.ProtoReflect.Descriptor instead.
func (*InterceptSpec) Descriptor() ([]byte, []int) {
	return file_rpc_systema2manager_systema2manager_proto_rawDescGZIP(), []int{5}
}

func (x *InterceptSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterceptSpec) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *InterceptSpec) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *InterceptSpec) GetMechanism() string {
	if x != nil {
		return x.Mechanism
	}
	return ""
}

func (x *InterceptSpec) GetAdditional() string {
	if x != nil {
		return x.Additional
	}
	return ""
}

func (x *InterceptSpec) GetTargetHost() string {
	if x != nil {
		return x.TargetHost
	}
	return ""
}

func (x *InterceptSpec) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

var File_rpc_systema2manager_systema2manager_proto protoreflect.FileDescriptor

var file_rpc_systema2manager_systema2manager_proto_rawDesc = []byte{
	0x0a, 0x29, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63,
	0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x4b, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x73, 0x22, 0xf7, 0x01, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x63, 0x65, 0x70, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x58, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x65, 0x70, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x2a, 0x92, 0x01, 0x0a, 0x18, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x10,
	0x0a, 0x0c, 0x4e, 0x4f, 0x5f, 0x4d, 0x45, 0x43, 0x48, 0x41, 0x4e, 0x49, 0x53, 0x4d, 0x10, 0x05,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x10, 0x06, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x32,
	0xcd, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x52, 0x55, 0x44, 0x12,
	0x5d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61,
	0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x5f,
	0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x34, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x84, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x12, 0x74, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x28, 0x01, 0x30, 0x01, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x77, 0x69, 0x72, 0x65, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x32, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_systema2manager_systema2manager_proto_rawDescOnce sync.Once
	file_rpc_systema2manager_systema2manager_proto_rawDescData = file_rpc_systema2manager_systema2manager_proto_rawDesc
)

func file_rpc_systema2manager_systema2manager_proto_rawDescGZIP() []byte {
	file_rpc_systema2manager_systema2manager_proto_rawDescOnce.Do(func() {
		file_rpc_systema2manager_systema2manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_systema2manager_systema2manager_proto_rawDescData)
	})
	return file_rpc_systema2manager_systema2manager_proto_rawDescData
}

var file_rpc_systema2manager_systema2manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_systema2manager_systema2manager_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rpc_systema2manager_systema2manager_proto_goTypes = []interface{}{
	(InterceptDispositionType)(0),  // 0: telepresence.systema2manager.InterceptDispositionType
	(*ConnectionChunk)(nil),        // 1: telepresence.systema2manager.ConnectionChunk
	(*RemoveInterceptRequest)(nil), // 2: telepresence.systema2manager.RemoveInterceptRequest
	(*SessionInfo)(nil),            // 3: telepresence.systema2manager.SessionInfo
	(*InterceptInfoSnapshot)(nil),  // 4: telepresence.systema2manager.InterceptInfoSnapshot
	(*InterceptInfo)(nil),          // 5: telepresence.systema2manager.InterceptInfo
	(*InterceptSpec)(nil),          // 6: telepresence.systema2manager.InterceptSpec
	(*empty.Empty)(nil),            // 7: google.protobuf.Empty
}
var file_rpc_systema2manager_systema2manager_proto_depIdxs = []int32{
	3, // 0: telepresence.systema2manager.RemoveInterceptRequest.session:type_name -> telepresence.systema2manager.SessionInfo
	5, // 1: telepresence.systema2manager.InterceptInfoSnapshot.intercepts:type_name -> telepresence.systema2manager.InterceptInfo
	6, // 2: telepresence.systema2manager.InterceptInfo.spec:type_name -> telepresence.systema2manager.InterceptSpec
	0, // 3: telepresence.systema2manager.InterceptInfo.disposition:type_name -> telepresence.systema2manager.InterceptDispositionType
	7, // 4: telepresence.systema2manager.ManagerCRUD.ListIntercepts:input_type -> google.protobuf.Empty
	2, // 5: telepresence.systema2manager.ManagerCRUD.RemoveIntercept:input_type -> telepresence.systema2manager.RemoveInterceptRequest
	1, // 6: telepresence.systema2manager.ManagerProxy.HandleConnection:input_type -> telepresence.systema2manager.ConnectionChunk
	4, // 7: telepresence.systema2manager.ManagerCRUD.ListIntercepts:output_type -> telepresence.systema2manager.InterceptInfoSnapshot
	7, // 8: telepresence.systema2manager.ManagerCRUD.RemoveIntercept:output_type -> google.protobuf.Empty
	1, // 9: telepresence.systema2manager.ManagerProxy.HandleConnection:output_type -> telepresence.systema2manager.ConnectionChunk
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_systema2manager_systema2manager_proto_init() }
func file_rpc_systema2manager_systema2manager_proto_init() {
	if File_rpc_systema2manager_systema2manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_systema2manager_systema2manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_systema2manager_systema2manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInterceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_systema2manager_systema2manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_systema2manager_systema2manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterceptInfoSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_systema2manager_systema2manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterceptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_systema2manager_systema2manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterceptSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_systema2manager_systema2manager_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ConnectionChunk_InterceptId)(nil),
		(*ConnectionChunk_Data)(nil),
		(*ConnectionChunk_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_systema2manager_systema2manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rpc_systema2manager_systema2manager_proto_goTypes,
		DependencyIndexes: file_rpc_systema2manager_systema2manager_proto_depIdxs,
		EnumInfos:         file_rpc_systema2manager_systema2manager_proto_enumTypes,
		MessageInfos:      file_rpc_systema2manager_systema2manager_proto_msgTypes,
	}.Build()
	File_rpc_systema2manager_systema2manager_proto = out.File
	file_rpc_systema2manager_systema2manager_proto_rawDesc = nil
	file_rpc_systema2manager_systema2manager_proto_goTypes = nil
	file_rpc_systema2manager_systema2manager_proto_depIdxs = nil
}
